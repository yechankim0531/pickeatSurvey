@import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css);

:root {
  --red:#EA185E;
}

/*
24.07.02 피드백- ecy

현업(실무)에서 작업시 프론트에서는 디자이너가 그린 화면을 그대로 복붙을 얼마나 잘하는지도 중요합니다. 
똑같이 구현을 할 수 있도록 노력해야합니다.

1. 폰트가 디자인 파일과 달라요.
디자인 파일에 폰트 사용방법 업데이트해두었어요. 확인부탁드립니다. 

2. aos,ios 모바일을 고려하여 작업해주세요. 
ios는 특히나 노치가 있기 때문에 safe-area 영역을 고려하여 css 작업을 해주어야 해요. 
https://developer.mozilla.org/en-US/docs/Web/CSS/env
그리고 현재 모바일을 고려안하고 짜고 있는 것 같아요.
f12를 키고 "Dimensionse:Responsive" 를 줄였다폈다 해보면서 확인해보세요. 과연 화면이 130*810이어도 
깨진 화면을 그대로 보여줄 것인지. 화면 크기를 어디까지 고려할 것인지. 해당 부분은 굉장히 중요한 부분입니다. 

3.위와 같은 내용인데요. px이라는 단위를 쓸 경우 반응형이 되지 않습니다. 
모바일을 고려하여 작업을 어떻게 할지 고려해주세요. 방법은 다음과 같이 3가지가 있습니다. (웹기준)
1)em or rem 
2)%계산
3)vw
http://publishing.kr/vw/
*처음 접할 시 검색해보시고, 잘 모르겠으면 QA시트에 적고 공유부탁드려요!

4. css 작성시 정답은 없지만, 한번 정한 순서 flow 가 바뀌게 되면 좋지 않게 봅니다. 
저는 기본적으로 이런 규칙으로 작성을 해요. 
예를 들어 box라는 한 클래스가 있다고 가정할게요. 

.box {
  font-family:;  
  position:relative;
  display:; //display와 연관된 아이들 주루룩 적기
  width:;
  height:;
  margin:;
  padding:;
  border:;
  border-radius:;
  color:;
  font-size:;
  font-weight:;
  vertical-align:;
  background:;
  overflow:;
  //효과들 shadow 등등 
}

*/

* {
  margin: 0;
  padding: 0;
  outline: none;
  box-sizing: border-box;
  font-family: 'Spoqa Han Sans Neo', 'sans-serif';
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: rgb(234, 24, 94, 0.75);
}

.container {
 
  align-items: center;
  background: #fff;
  align-items: center;
  border-radius: 2.5rem;
  width: 90%;
  padding: 1rem 2rem;
  max-width: 50rem;
  text-align: center;
}

.button {
  background-color: #EA185E;
  border: none;
  margin: 1.25rem 0;
  width: 48%;
  border-radius: 0.7rem;
  color: #fff;
  padding: 0.875rem 1.875rem;
  transition: background-color 0.5s;
}

.button:hover {
  cursor: pointer;
  background: rgba(219, 223, 226, 0.5);
  color: #78828C;
}

.prevBtn {
  background-color: #FBFBFB;
  margin: 1.25rem 0;
  width: 48%;
  border-radius: 0.7rem;
  border-color: #DBDFE2;
  color: #78828C;
  padding: 0.875rem 1.875rem;
  transition: background-color 0.5s;
}

.prevBtn:hover {
  cursor: pointer;
  background: rgba(219, 223, 226, 0.5);
  color: #fff;
}

.box {
  margin: 1.25rem 0;
}

.text {
  padding: 2rem;
}

form .form-row {
  display: flex;
  margin: 32px 0;
  padding: 1.3rem;
  gap: 2rem;
}

form .form-row .input-data {
  position: relative;
  flex: 1 1 calc(50% - 1rem);
  height: 2rem;
  margin: 0.5rem 0;
}

.input-data input,
select {
  display: block;
  width: 100%;
  height: 100%;
  border: none;
  border-bottom: 0.15rem solid rgba(0, 0, 0, 0.12);
  font-size: 0.8rem;
}

.input-data label {
  position: absolute;
  bottom: 2.5rem;
  left: 0;
  font-size: 1rem;
  color: rgba(0, 0, 0, 0.8);
}

.answerChoice {
  display: flex;
  align-items: flex-start;
  
 
 
}

.radio-container {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  padding: 0.5rem 10rem 0.5rem 0rem;
  cursor: pointer;
  border-radius: 0.5rem;
  transition: background-color 0.3s;
  width: 100%;
  
}



.radio-container input[type="radio"] {
  margin-right: 0.5rem; /* Space between radio button and label */
  cursor: pointer;
}

.radio-container label{
  flex-wrap: nowrap
}

input[type='radio'] {
  cursor: pointer;
  margin: 1rem;
  width: 1.5rem;
  height: 1.5rem;
  accent-color: var(--red);
}

img{
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
  
}



.mChoice{
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  width: 100%; 
}

input[type='checkbox']{
  display: none;
  cursor: pointer;
  
  
  
}

.mChoice label {
  display: flex;
  padding: 0.7rem 1.5rem;
  justify-content: space-evenly;
  margin-right: 20px;
  border: 2px solid #DBDFE2; 
  border-radius: 0.5rem;
  cursor: pointer;
  color: #78828C;
  
}

 input[type="checkbox"]:checked + label {
  border: 2px solid #EA185E;
  color: #EA185E;
  
}

#question{
  padding: 1rem;
}



@media (max-width: 768px) {
  body {
    padding: 20px;
    background-color: #fff;
  }
  .container {
    height: auto;
    padding: 1.25rem;
  }
  .container form .form-row, mChoice {
    flex-direction: column;
    margin: 1rem 0;
  }
  .input-data label {
    bottom: 2rem;
  }
  .buttons{
    
    transform: translatey(7rem);
   
  }
  
}
